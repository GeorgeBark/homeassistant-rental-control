---
automation:
  id: "{{ config_entry["unique_id"] }} - {{ NAME }} - Update {{ rc_name }} - startup"
  alias: "{{ NAME }} - Update {{ rc_name }} - startup"
  description: ""
  trigger:
    - platform: homeassistant
      event: start
    - platform: event
      event_type: rental_control_refresh
      event_data:
        rental_control_name: "{{ rc_name }}"
  condition: []
  action:
    - delay:
        hours: 0
        minutes: 0
        seconds: 1
        milliseconds: 0
    - alias: Counted slot update
      repeat:
        count: '{{ config_entry["max_events"] }}'
        sequence:
          - service: rental_control.update_code_slot
            data:
              # yamllint disable rule:line-length
              lockname: "{% raw %}{{{% endraw %} base {% raw %}}}{% endraw %}"
              slot: "{% raw %}{{{% endraw %} start_slot|int + repeat.index|int {% raw %}}}{% endraw %}"
              slot_name: >-
                {% raw %}{{{% endraw %} states("input_text." + base + "_name_" + (start_slot|int +
                repeat.index|int)|string) {% raw %}}}{% endraw %}
              slot_code: >-
                {% raw %}{{{% endraw %} states("input_text." + base + "_pin_" + (start_slot|int +
                repeat.index|int)|string) {% raw %}}}{% endraw %}
              start_time: >-
                {% raw %}{{{% endraw %} states("input_datetime.start_date_" + base + "_" +
                (start_slot|int + repeat.index|int)|string) {% raw %}}}{% endraw %}
              end_time: >-
                {% raw %}{{{% endraw %} states("input_datetime.end_date_" + base + "_" +
                (start_slot|int + repeat.index|int)|string) {% raw %}}}{% endraw %}
              # yamllint enable rule
  variables:
    start_slot: '{{ config_entry["start_slot"]|int - 1 }}'
    base: '{{ config_entry["lockname"] }}'
  mode: restart
